name: Build and Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1
      ECR_REPOSITORY: wrap-it-api
      ECR_PUBLIC_REGISTRY_ALIAS: ${{ secrets.ECR_PUBLIC_REGISTRY_ALIAS }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Login to AWS Public ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          registry-type: public
        env:
          AWS_REGION: us-east-1

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=$(date +%s)
          
          # Отримуємо URI для публічного ECR
          ECR_PUBLIC_URI="public.ecr.aws/$ECR_PUBLIC_REGISTRY_ALIAS/$ECR_REPOSITORY"

          docker build -t $ECR_REPOSITORY .
          docker tag $ECR_REPOSITORY:latest $ECR_PUBLIC_URI:$IMAGE_TAG
          docker push $ECR_PUBLIC_URI:$IMAGE_TAG

          echo "IMAGE_URI=$ECR_PUBLIC_URI:$IMAGE_TAG" >> $GITHUB_ENV

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      AWS_REGION: us-east-1

    steps:
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin public.ecr.aws
            
            docker pull ${{ env.IMAGE_URI }}
            docker stop naughty_mestorf || true
            docker rm naughty_mestorf || true
            docker run -d --name naughty_mestorf -p 80:8080 ${{ env.IMAGE_URI }}
